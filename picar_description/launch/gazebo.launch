<launch>

  <!-- these are the arguments you can pass this launch file, for example paused:=true -->
  <arg name="paused"          default="false"/>
  <arg name="use_sim_time"    default="true"/>
  <arg name="gui"             default="true"/>
  <arg name="headless"        default="false"/>
  <arg name="debug"           default="false"/>
  <arg name="namespace"       default="/picar" />

  <arg name="world_name"      default="worlds/empty_world" />
  <arg name="model"           default="$(find picar_description)/urdf/picar.urdf.xacro"/>
  <arg name="rvizconfig"      default="$(find picar_description)/rviz/simu.rviz" />
  <arg name="cmd_vel_topic"   default="/picar/ackermann_steering_controller/cmd_vel" />

  <group ns="$(arg namespace)">

    <!-- Gazebo  -->
    <!-- We resume the logic in empty_world.launch, changing only the name of the world to be launched -->
    <include file="$(find gazebo_ros)/launch/empty_world.launch">
      <arg name="debug"         value="$(arg debug)" />
      <arg name="gui"           value="$(arg gui)" />
      <arg name="paused"        value="$(arg paused)"/>
      <arg name="use_sim_time"  value="$(arg use_sim_time)"/>
      <arg name="headless"      value="$(arg headless)"/>
      <arg name="world_name"    value="$(arg world_name)"/>
    </include>

    <!-- Load the robot description -->
    <param name="robot_description"  command="$(find xacro)/xacro $(arg model)" />

    <!-- Load ros_controllers configuration parameters -->
    <rosparam command="load" ns="$(arg namespace)" file="$(find picar_control)/config/ackermann_steering_controller.yaml" />
    <rosparam command="load" ns="$(arg namespace)" file="$(find picar_control)/config/gains.yaml" />
    <rosparam command="load" ns="$(arg namespace)" file="$(find picar_control)/config/joint_state_publisher.yaml" />
    <rosparam command="load" ns="$(arg namespace)" file="$(find picar_control)/config/steer_bot_hardware_gazebo.yaml" />

    <!-- Spawn the controllers -->
    <node pkg="controller_manager" type="spawner" name="controller_spawner" ns="$(arg namespace)"
          args="joint_state_publisher ackermann_steering_controller"
          respawn="false" output="screen" />

    <!-- Launch  the robot state publisher -->
    <node pkg="robot_state_publisher" type="robot_state_publisher"  name="robot_state_publisher" respawn="false" output="screen">
      <param name="publish_frequency" type="double" value="50.0" />
    </node>

    <!-- push robot_description to factory and spawn robot in gazebo -->
    <node pkg="gazebo_ros" type="spawn_model" name="spawn_vehicle" 
          args="-urdf -param robot_description -model picar
                -gazebo_namespace /$(arg namespace)/gazebo
                -x 0.0 -y 0.0 -z 0.01
                -R 0.0 -P 0.0 -Y -0.1"
          respawn="false"
          output="screen" />

    
    <!-- Launch a rqt steering GUI for publishing to /steer_bot/steer_drive_controller/cmd_vel -->
    <!--node pkg="rqt_robot_steering" type="rqt_robot_steering" name="rqt_robot_steering" >
      <param name="default_topic" value="$(arg namespace)/ackermann_steering_controller/cmd_vel"/>
    </node-->

    <node name="rviz" pkg="rviz" type="rviz"  args="-d $(arg rvizconfig)" />
    <node name="rqt"  pkg="rqt_gui" type="rqt_gui" />

    <include file="$(find picar_teleop)/launch/picar_teleop_ps3.launch">
      <arg name="cmd_vel_topic" value="$(arg cmd_vel_topic)" />
    </include>

  </group>
</launch>
